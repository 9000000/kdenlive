# SPDX-FileCopyrightText: none
# SPDX-License-Identifier: CC0-1.0

include:
  - project: sysadmin/ci-utilities
    file:
      - /gitlab-templates/reuse-lint.yml
      - /gitlab-templates/linux.yml
      - /gitlab-templates/freebsd.yml
      - /gitlab-templates/linux-qt6.yml
      - /gitlab-templates/flatpak.yml
      - /gitlab-templates/craft-appimage.yml
      - /gitlab-templates/craft-windows-mingw64.yml
      - /gitlab-templates/craft-macos-x86-64.yml
      - /gitlab-templates/craft-macos-arm64.yml

.craft-mac-notarize:
  variables:
    KDECI_NOTARIZEMACAPP_CONFIG: $CI_PROJECT_DIR/ci-utilities/signing/notarizemacapp.ini
  after_script:
    - python3 ci-notary-service/macappnotarizer.py -v --config $KDECI_NOTARIZEMACAPP_CONFIG $CI_PROJECT_DIR/.kde-ci-packages/*.dmg
    # Move logs to .logs dir to protect them against cleanup deletion
    - mkdir $CI_PROJECT_DIR/.logs/
    - ls
    - cp -vf task-debug.log $CI_PROJECT_DIR/.logs/
    - cp -vf task.log $CI_PROJECT_DIR/.logs/
    # cleanup, we can't just delete everything since that would also delete the artifacts which are gathered after
    - rm -rf src craftmaster ci-utilities blueprints downloads craft-clone $KDECI_CRAFT_PLATFORM

craft_macos_arm64_notarize_test:
  extends:
    - craft_macos_arm64
    - .craft-mac-notarize
  artifacts:
    expire_in: 3 days
    when: always
    expose_as: "macOS ARM Signed"
    paths:
     - ".kde-ci-packages/"
     - ".logs/"


.craft-qt6:
  variables:
    KDECI_CRAFT_CONFIG: ci-utilities/craft/qt6/CraftConfig.ini

craft_appimage_qt6_x86_64:
  extends:
    - craft_appimage_x86_64
    - .craft-qt6

craft_windows_qt6_mingw64:
  extends:
    - craft_windows_qt515_mingw64
    - .craft-qt6

craft_macos_qt6_arm64:
  extends:
    - craft_macos_arm64
    - .craft-qt6
    - .craft-mac-notarize

craft_macos_qt6_x86_64:
  extends:
    - craft_macos_x86_64
    - .craft-qt6
    - .craft-mac-notarize

xml_lint:
  stage: build
  image: invent-registry.kde.org/sysadmin/ci-images/suse-qt515:latest
  tags:
    - Linux
  script:
    # enable globstar to be able to use ** as recursive wildcard
    - shopt -s globstar
    # exit shell on non-zero exit code
    - set -e 
    # execute xmllint for all xml files
    - for x in **/*.xml; do echo "Processing $x"; xmllint -noout "$x"; done
  rules:
    - changes: [ "**/*.xml" ]